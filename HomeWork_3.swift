import Swift


//Есть словарь с видами чая и их стоимостью. Есть очередь людей, которые хотят заказать чай (можно представить её в виде массива видов чая, которые хотят заказать).
//Необходимо последовательно выводить в консоль сколько заплатит покупатель (необходимо вывести его номер по порядку, чай, который он заказал, и стоимость).

enum teaType: String{
    case green = "Зелёный"
    case black = "Черный"
    case fruit = "Фруктовый"
    
}
var a: [teaType: Int] = [.green : 20, .black : 30, .fruit : 10]
var queue  = ["Зелёный", "Черный", "Черный", "Фруктовый", "Зелёный", "Черный", "Фруктовый", "Зелёный"]
for (index,element) in queue.enumerated(){
var price = 0
    if element == "Зелёный"{
        price  = 20 
    }else if element == "Черный"{
        price  = 30
    }else if element == "Фруктовый"{
        price  = 10
    }
    
print(index + 1,element, price)
}


// Есть массив [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]. 
// Необходимо создать новый массив, который будет состоять из элементов старого, но не должно быть nil, не должно быть 0 и 4, а также массив должен быть отсортирован по возрастанию.

var a: [Int?] = [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]

var b = a.compactMap{ $0 }.filter{ $0 != 0 && $0 != 4 }.sorted(by:<)

print(b)

// Написать функцию, которая на вход принимает целое число, а возвращает массив, который сформирован по следующим правилам: 
// количество элементов соответствует переданному числу, массив начинается с 1, каждый последующий элемент больше предыдущего в 2 раза.

func num(_ a :Int) ->[Int]{
    var array = [Int]()
    var numArray = 1
    for _ in 1...a {
        array.append(numArray)
        numArray *=  2
    }
    return array
}
